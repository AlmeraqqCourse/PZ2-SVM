import abc
import random  # –î–û–ë–ê–í–ò–¢–¨ –≠–¢–£ –°–¢–†–û–ö–£
from descriptors import BoundedStat

class Human:
    """–ë–∞–∑–æ–≤—ã–π –∫–ª–∞—Å—Å –¥–ª—è –≤—Å–µ—Ö —Å—É—â–µ—Å—Ç–≤"""
    hp = BoundedStat(0, 1000)
    mp = BoundedStat(0, 500)
    strength = BoundedStat(1, 100)
    agility = BoundedStat(1, 100)
    intellect = BoundedStat(1, 100)
    
    def __init__(self, name, level=1):
        self.name = name
        self.level = level
        self.hp = 100
        self.mp = 50
        self.strength = 10
        self.agility = 10
        self.intellect = 10
        self.effects = []
        self.cooldowns = {}
    
    @property
    def is_alive(self):
        return self.hp > 0
    
    def __str__(self):
        return f"{self.name} (–£—Ä. {self.level}) - HP: {self.hp}/{self.max_hp} MP: {self.mp}/{self.max_mp}"
    
    @property
    def max_hp(self):
        return 100 + (self.level - 1) * 20 + self.strength * 2
    
    @property
    def max_mp(self):
        return 50 + (self.level - 1) * 10 + self.intellect * 3

# ... –æ—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ characters.py –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π ...


class Character(Human, abc.ABC):
    """–ê–±—Å—Ç—Ä–∞–∫—Ç–Ω—ã–π –∫–ª–∞—Å—Å –ø–µ—Ä—Å–æ–Ω–∞–∂–∞"""
    
    def __init__(self, name, level=1):
        super().__init__(name, level)
        self.skills = []
        self.inventory = []
        self._setup_skills()
    
    @abc.abstractmethod
    def _setup_skills(self):
        pass
    
    @abc.abstractmethod
    def basic_attack(self, target):
        pass
    
    @abc.abstractmethod
    def use_skill(self, skill_name, target=None, party=None):
        pass
    
    def update_cooldowns(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫—É–ª–¥–∞—É–Ω–æ–≤ –Ω–∞–≤—ã–∫–æ–≤"""
        for skill in list(self.cooldowns.keys()):
            self.cooldowns[skill] -= 1
            if self.cooldowns[skill] <= 0:
                del self.cooldowns[skill]


class Warrior(Character):
    """–ö–ª–∞—Å—Å –í–æ–∏–Ω–∞"""
    
    def _setup_skills(self):
        self.skills = [
            {"name": "–£–¥–∞—Ä –≥–µ—Ä–æ—è", "mp_cost": 10, "cooldown": 0, "description": "–ú–æ—â–Ω–∞—è –∞—Ç–∞–∫–∞ —Å –¥–≤–æ–π–Ω—ã–º —É—Ä–æ–Ω–æ–º"},
            {"name": "–©–∏—Ç –±—É—Ä–∏", "mp_cost": 20, "cooldown": 3, "description": "–ó–∞—â–∏—Ç–∞ –∏ –∫–æ–Ω—Ç—Ä–∞—Ç–∞–∫–∞"},
            {"name": "–ë–æ–µ–≤–æ–π –∫–ª–∏—á", "mp_cost": 15, "cooldown": 2, "description": "–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∏–ª—É –≤—Å–µ–π –≥—Ä—É–ø–ø—ã"}
        ]
        self.hp = 150
        self.strength = 20
        self.agility = 12
        self.intellect = 8
    
    def basic_attack(self, target):
        damage = self.strength + random.randint(1, 10)
        if random.random() < 0.1:  # 10% —à–∞–Ω—Å –∫—Ä–∏—Ç–∞
            damage *= 2
            print(f"‚ö° –ö–†–ò–¢–ò–ß–ï–°–ö–ò–ô –£–†–û–ù! {self.name} –Ω–∞–Ω–æ—Å–∏—Ç {damage} —É—Ä–æ–Ω–∞!")
        else:
            print(f"‚öîÔ∏è {self.name} –∞—Ç–∞–∫—É–µ—Ç {target.name} –∏ –Ω–∞–Ω–æ—Å–∏—Ç {damage} —É—Ä–æ–Ω–∞")
        target.hp -= damage
        return damage
    
    def use_skill(self, skill_name, target=None, party=None):
        skill = next((s for s in self.skills if s["name"] == skill_name), None)
        if not skill:
            return False
        
        if skill_name in self.cooldowns:
            print(f"‚ùå –ù–∞–≤—ã–∫ {skill_name} –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ! –û—Å—Ç–∞–ª–æ—Å—å: {self.cooldowns[skill_name]} —Ö–æ–¥–æ–≤")
            return False
        
        if self.mp < skill["mp_cost"]:
            print(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞–Ω—ã –¥–ª—è {skill_name}!")
            return False
        
        self.mp -= skill["mp_cost"]
        self.cooldowns[skill_name] = skill["cooldown"]
        
        if skill_name == "–£–¥–∞—Ä –≥–µ—Ä–æ—è":
            damage = self.strength * 2 + random.randint(5, 15)
            target.hp -= damage
            print(f"üî• {self.name} –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –£–¥–∞—Ä –≥–µ—Ä–æ—è –Ω–∞ {target.name}! –ù–∞–Ω–µ—Å–µ–Ω–æ {damage} —É—Ä–æ–Ω–∞!")
        
        elif skill_name == "–©–∏—Ç –±—É—Ä–∏":
            self.effects.append({"name": "–©–∏—Ç", "duration": 2, "defense_bonus": 10})
            print(f"üõ°Ô∏è {self.name} –∞–∫—Ç–∏–≤–∏—Ä—É–µ—Ç –©–∏—Ç –±—É—Ä–∏! –ó–∞—â–∏—Ç–∞ —É–≤–µ–ª–∏—á–µ–Ω–∞!")
        
        elif skill_name == "–ë–æ–µ–≤–æ–π –∫–ª–∏—á":
            for member in party:
                if member.is_alive:
                    member.strength += 5
                    member.effects.append({"name": "–ë–æ–µ–≤–æ–π –∫–ª–∏—á", "duration": 3, "strength_bonus": 5})
            print(f"üì¢ {self.name} –∏–∑–¥–∞–µ—Ç –ë–æ–µ–≤–æ–π –∫–ª–∏—á! –°–∏–ª–∞ –≥—Ä—É–ø–ø—ã —É–≤–µ–ª–∏—á–µ–Ω–∞!")
        
        return True


class Mage(Character):
    """–ö–ª–∞—Å—Å –ú–∞–≥–∞"""
    
    def _setup_skills(self):
        self.skills = [
            {"name": "–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä", "mp_cost": 15, "cooldown": 0, "description": "–ë–∞–∑–æ–≤–∞—è –º–∞–≥–∏—á–µ—Å–∫–∞—è –∞—Ç–∞–∫–∞"},
            {"name": "–õ–µ–¥—è–Ω–∞—è —Å—Ç—Ä–µ–ª–∞", "mp_cost": 20, "cooldown": 1, "description": "–ó–∞–º–µ–¥–ª—è–µ—Ç —Ü–µ–ª—å"},
            {"name": "–©–∏—Ç –º–∞–Ω—ã", "mp_cost": 25, "cooldown": 4, "description": "–°–æ–∑–¥–∞–µ—Ç –º–∞–≥–∏—á–µ—Å–∫–∏–π —â–∏—Ç"}
        ]
        self.hp = 80
        self.mp = 100
        self.strength = 6
        self.agility = 10
        self.intellect = 24
    
    def basic_attack(self, target):
        damage = self.intellect // 2 + random.randint(1, 5)
        print(f"üîÆ {self.name} –∞—Ç–∞–∫—É–µ—Ç –º–∞–≥–∏–µ–π {target.name} –∏ –Ω–∞–Ω–æ—Å–∏—Ç {damage} —É—Ä–æ–Ω–∞")
        target.hp -= damage
        return damage
    
    def use_skill(self, skill_name, target=None, party=None):
        skill = next((s for s in self.skills if s["name"] == skill_name), None)
        if not skill:
            return False
        
        if skill_name in self.cooldowns:
            print(f"‚ùå –ù–∞–≤—ã–∫ {skill_name} –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ!")
            return False
        
        if self.mp < skill["mp_cost"]:
            print(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞–Ω—ã!")
            return False
        
        self.mp -= skill["mp_cost"]
        self.cooldowns[skill_name] = skill["cooldown"]
        
        if skill_name == "–û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä":
            damage = self.intellect + random.randint(10, 20)
            target.hp -= damage
            print(f"üî• {self.name} –∑–∞–ø—É—Å–∫–∞–µ—Ç –û–≥–Ω–µ–Ω–Ω—ã–π —à–∞—Ä –≤ {target.name}! –ù–∞–Ω–µ—Å–µ–Ω–æ {damage} —É—Ä–æ–Ω–∞!")
        
        elif skill_name == "–õ–µ–¥—è–Ω–∞—è —Å—Ç—Ä–µ–ª–∞":
            damage = self.intellect // 2 + random.randint(5, 15)
            target.hp -= damage
            target.effects.append({"name": "–ó–∞–º–µ–¥–ª–µ–Ω–∏–µ", "duration": 2, "agility_reduction": 5})
            print(f"‚ùÑÔ∏è {self.name} –≤—ã–ø—É—Å–∫–∞–µ—Ç –õ–µ–¥—è–Ω—É—é —Å—Ç—Ä–µ–ª—É! {target.name} –∑–∞–º–µ–¥–ª–µ–Ω!")
        
        elif skill_name == "–©–∏—Ç –º–∞–Ω—ã":
            self.effects.append({"name": "–ú–∞–≥–∏—á–µ—Å–∫–∏–π —â–∏—Ç", "duration": 3, "damage_reduction": 0.5})
            print(f"üí´ {self.name} —Å–æ–∑–¥–∞–µ—Ç –ú–∞–≥–∏—á–µ—Å–∫–∏–π —â–∏—Ç! –ü–æ–ª—É—á–∞–µ–º—ã–π —É—Ä–æ–Ω —É–º–µ–Ω—å—à–µ–Ω!")
        
        return True


class Healer(Character):
    """–ö–ª–∞—Å—Å –¶–µ–ª–∏—Ç–µ–ª—è"""
    
    def _setup_skills(self):
        self.skills = [
            {"name": "–ò—Å—Ü–µ–ª–µ–Ω–∏–µ", "mp_cost": 20, "cooldown": 0, "description": "–õ–µ—á–∏—Ç —Å–æ—é–∑–Ω–∏–∫–∞"},
            {"name": "–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —â–∏—Ç", "mp_cost": 30, "cooldown": 4, "description": "–ó–∞—â–∏—â–∞–µ—Ç —Å–æ—é–∑–Ω–∏–∫–∞"},
            {"name": "–ú–æ–ª–∏—Ç–≤–∞", "mp_cost": 40, "cooldown": 3, "description": "–õ–µ—á–∏—Ç –≤—Å—é –≥—Ä—É–ø–ø—É"}
        ]
        self.hp = 90
        self.mp = 120
        self.strength = 8
        self.agility = 12
        self.intellect = 20
    
    def basic_attack(self, target):
        damage = self.intellect // 3 + random.randint(1, 8)
        print(f"‚ú® {self.name} –∞—Ç–∞–∫—É–µ—Ç {target.name} –∏ –Ω–∞–Ω–æ—Å–∏—Ç {damage} —É—Ä–æ–Ω–∞")
        target.hp -= damage
        return damage
    
    def use_skill(self, skill_name, target=None, party=None):
        skill = next((s for s in self.skills if s["name"] == skill_name), None)
        if not skill:
            return False
        
        if skill_name in self.cooldowns:
            print(f"‚ùå –ù–∞–≤—ã–∫ {skill_name} –Ω–∞ –ø–µ—Ä–µ–∑–∞—Ä—è–¥–∫–µ!")
            return False
        
        if self.mp < skill["mp_cost"]:
            print(f"‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–∞–Ω—ã!")
            return False
        
        self.mp -= skill["mp_cost"]
        self.cooldowns[skill_name] = skill["cooldown"]
        
        if skill_name == "–ò—Å—Ü–µ–ª–µ–Ω–∏–µ":
            heal = self.intellect + random.randint(15, 25)
            target.hp = min(target.max_hp, target.hp + heal)
            print(f"üíö {self.name} –∏—Å—Ü–µ–ª—è–µ—Ç {target.name} –Ω–∞ {heal} HP!")  # –ò–°–ü–†–ê–í–ò–¢–¨: heal –≤–º–µ—Å—Ç–æ heel
        
        elif skill_name == "–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —â–∏—Ç":
            target.effects.append({"name": "–ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π —â–∏—Ç", "duration": 2, "invulnerable": True})
            print(f"üåü {self.name} –∑–∞—â–∏—â–∞–µ—Ç {target.name} –ë–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º —â–∏—Ç–æ–º!")
        
        elif skill_name == "–ú–æ–ª–∏—Ç–≤–∞":
            for member in party:
                if member.is_alive:
                    heal = self.intellect // 2 + random.randint(10, 20)
                    member.hp = min(member.max_hp, member.hp + heal)
            print(f"üôè {self.name} —á–∏—Ç–∞–µ—Ç –ú–æ–ª–∏—Ç–≤—É! –í—Å—è –≥—Ä—É–ø–ø–∞ –∏—Å—Ü–µ–ª–µ–Ω–∞!")
        
        return True